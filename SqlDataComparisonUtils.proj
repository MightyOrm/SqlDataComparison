<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <AssemblyName>SqlDataComparisonUtils</AssemblyName>
    <OutputPath>build\</OutputPath>
    <OutputInstallScript>Install.sql</OutputInstallScript>
    <OutputInstallMasterScript>InstallMaster.sql</OutputInstallMasterScript>
    <OutputCleanMasterScript>CleanMaster.sql</OutputCleanMasterScript>
    <SourcePath>src\</SourcePath>
    <LicenseFile>publish.license.template</LicenseFile>
    <LicenseReplaceString>[[LICENSE]]</LicenseReplaceString>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Mighty.SqlUtils.DataComparison</PackageId>
    <Version>0.3.0</Version>
    <Authors>Mike Beaton</Authors>
    <PackageTags>SQL Server;SQL;data compare;data comparison</PackageTags>
    <Description>Pure SQL data comparison and reconciliation utility.

* `sp_comparedata 'MyTable', 'RemoteDb..MyTable'`
* `sp_exportall 'MyTable', 'RemoteDb..MyTable'`
* etc.

With support for:

* Column name remapping
* Columns filter
* Automatic (primary key based) or manual join columns spec
</Description>
    <Copyright>Copyright (c) 2020 Mike Beaton</Copyright>
    <PackageProjectUrl>https://github.com/MightyOrm/SqlDataComparisonUtils</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/MightyOrm/SqlDataComparisonUtils/blob/master/LICENSE</PackageLicenseUrl>
    <PackageOutputPath>pack</PackageOutputPath>
  </PropertyGroup>

  <Target Name="ReadLicense">
    <ItemGroup>
      <LicenseFileContents Include="%0d%0a$([System.IO.File]::ReadAllText($(SourcePath)$(LicenseFile)).Replace([[PackageId]],$(PackageId)).Replace([[Version]],$(Version)).Replace([[PackageProjectUrl]],$(PackageProjectUrl)))%0d%0a"/>
    </ItemGroup>
    <PropertyGroup>
      <License>@(LicenseFileContents)</License>
    </PropertyGroup>
  </Target>

  <ItemGroup>
    <InstallFiles Include="$(SourcePath)CreateSqlUtilsDb.sql;$(SourcePath)types\*.sql;$(SourcePath)internals\*.sql;$(SourcePath)main\*.sql;$(SourcePath)main\*.sql"/>
  </ItemGroup>

  <!-- Concatenate files https://stackoverflow.com/a/29557615/795690 -->
  <Target Name="CreateInstall" Inputs="@(InstallFiles)" Outputs="$(OutputPath)$(OutputInstallScript)">
    <ItemGroup>
      <InstallFileContents Include="PRINT N'%(InstallFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(InstallFiles.Identity)).Replace($(LicenseReplaceString),$(License)))"/>
    </ItemGroup>
    <ItemGroup>
      <InstallFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputInstallScript)" Lines="@(InstallFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputInstallScript)"/>
  </Target>

  <ItemGroup>
    <InstallMasterFiles Include="$(SourcePath)master\use\UseMaster.sql;$(SourcePath)master\clean\*.sql;$(SourcePath)master\*.sql"/>
  </ItemGroup>

  <Target Name="CreateInstallMaster" Inputs="@(InstallMasterFiles)" Outputs="$(OutputPath)$(OutputInstallMasterScript)">
    <ItemGroup>
      <InstallMasterFileContents Include="PRINT N'%(InstallMasterFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(InstallMasterFiles.Identity)).Replace($(LicenseReplaceString),$(License)))"/>
    </ItemGroup>
    <ItemGroup>
      <InstallMasterFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputInstallMasterScript)" Lines="@(InstallMasterFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputInstallMasterScript)"/>
  </Target>

  <ItemGroup>
    <CleanMasterFiles Include="$(SourcePath)master\use\UseMaster.sql;$(SourcePath)master\clean\*.sql"/>
  </ItemGroup>

  <Target Name="CreateCleanMaster" Inputs="@(CleanMasterFiles)" Outputs="$(OutputPath)$(OutputCleanMasterScript)">
    <ItemGroup>
      <CleanMasterFileContents Include="PRINT N'%(CleanMasterFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(CleanMasterFiles.Identity)))"/>
    </ItemGroup>
    <ItemGroup>
      <CleanMasterFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputCleanMasterScript)" Lines="@(CleanMasterFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputCleanMasterScript)"/>
  </Target>

  <!-- Concatenate scripts on Build. -->
  <Target Name="Build"  DependsOnTargets="ReadLicense;CreateInstall;CreateInstallMaster;CreateCleanMaster" />

  <Target Name="Clean">
    <RemoveDir Directories="$(OutputPath)" Condition="Exists('$(OutputPath)')" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

</Project>