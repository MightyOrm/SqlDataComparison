<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <PackageId>MightyOrm.SqlDataComparison</PackageId>
    <Version>1.2.0</Version>
    <OutputPath>build\</OutputPath>
    <SourcePath>src\</SourcePath>
    <TestsPath>tests\</TestsPath>
    <OutputInstall>Install.sql</OutputInstall>
    <OutputInstallMaster>InstallMaster.sql</OutputInstallMaster>
    <OutputCleanMaster>CleanMaster.sql</OutputCleanMaster>
    <OutputReadme>README.txt</OutputReadme>
    <OutputInstallTSQLt>$(TestsPath)InstallTSQLt.sql</OutputInstallTSQLt>
    <OutputInstallTests>$(TestsPath)InstallTests.sql</OutputInstallTests>
    <OutputUninstallTestDbs>$(TestsPath)UninstallTestDbs.sql</OutputUninstallTestDbs>
    <OutputCompleteReinstallWithTests>$(TestsPath)CompleteReinstallWithTests.sql</OutputCompleteReinstallWithTests>
    <ContentRoot>contentFiles\any\any\</ContentRoot>
    <ContentFolder>SqlDataComparison</ContentFolder>
    <PackageOutputPath>pack</PackageOutputPath>
    <PackageOutputPath>pack</PackageOutputPath>
    <PackageProjectUrl>https://github.com/MightyOrm/SqlDataComparison</PackageProjectUrl>
    <LicenseFile>publish.license.template</LicenseFile>
    <LicenseReplaceString>[[LICENSE]]</LicenseReplaceString>
  </PropertyGroup>

  <Target Name="ReadLicense">
    <ItemGroup>
      <LicenseFileContents Include="%0d%0a$([System.IO.File]::ReadAllText($(SourcePath)$(LicenseFile)).Replace([[PackageId]],$(PackageId)).Replace([[Version]],$(Version)).Replace([[PackageProjectUrl]],$(PackageProjectUrl)))%0d%0a"/>
    </ItemGroup>
    <PropertyGroup>
      <License>@(LicenseFileContents)</License>
    </PropertyGroup>
  </Target>

  <ItemGroup>
    <InstallFiles Include="$(SourcePath)CreateSqlUtilsDb.sql;$(SourcePath)types\*.sql;$(SourcePath)preInternals\*.sql;$(SourcePath)internals\*.sql;$(SourcePath)core\*.sql;$(SourcePath)main\*.sql"/>
  </ItemGroup>

  <!-- Concatenate files https://stackoverflow.com/a/29557615/795690 -->
  <Target Name="CreateInstall" Inputs="SqlDataComparison.proj;$(SourcePath)$(LicenseFile);@(InstallFiles)" Outputs="$(OutputPath)$(OutputInstall)">
    <ItemGroup>
      <InstallFileContents Include="PRINT N'%(InstallFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(InstallFiles.Identity)).Replace($(LicenseReplaceString),$(License)))"/>
    </ItemGroup>
    <ItemGroup>
      <InstallFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputInstall)" Lines="@(InstallFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputInstall)"/>
  </Target>

  <ItemGroup>
    <InstallMasterFiles Include="$(SourcePath)master\use\UseMaster.sql;$(SourcePath)master\clean\*.sql;$(SourcePath)master\*.sql"/>
  </ItemGroup>

  <Target Name="CreateInstallMaster" Inputs="SqlDataComparison.proj;$(SourcePath)$(LicenseFile);@(InstallMasterFiles)" Outputs="$(OutputPath)$(OutputInstallMaster)">
    <ItemGroup>
      <InstallMasterFileContents Include="PRINT N'%(InstallMasterFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(InstallMasterFiles.Identity)).Replace($(LicenseReplaceString),$(License)))"/>
    </ItemGroup>
    <ItemGroup>
      <InstallMasterFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputInstallMaster)" Lines="@(InstallMasterFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputInstallMaster)"/>
  </Target>

  <ItemGroup>
    <CleanMasterFiles Include="$(SourcePath)master\use\UseMaster.sql;$(SourcePath)master\clean\*.sql"/>
  </ItemGroup>

  <Target Name="CreateCleanMaster" Inputs="SqlDataComparison.proj;$(SourcePath)$(LicenseFile);@(CleanMasterFiles)" Outputs="$(OutputPath)$(OutputCleanMaster)">
    <ItemGroup>
      <CleanMasterFileContents Include="PRINT N'%(CleanMasterFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(CleanMasterFiles.Identity)))"/>
    </ItemGroup>
    <ItemGroup>
      <CleanMasterFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputCleanMaster)" Lines="@(CleanMasterFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputCleanMaster)"/>
  </Target>

  <ItemGroup>
    <InstallTSQLtFiles Include="$(TestsPath)tsqlt\SetClrEnabled.sql;\OpenSource\tSQLt_V1.0.5873.27393\tSQLt.class.sql;"/>
  </ItemGroup>

  <Target Name="CreateInstallTSQLt" Inputs="SqlDataComparison.proj;$(SourcePath)$(LicenseFile);@(InstallTSQLtFiles)" Outputs="$(OutputPath)$(OutputInstallTSQLt)">
    <ItemGroup>
      <InstallTSQLtFileContents Include="PRINT N'%(InstallTSQLtFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(InstallTSQLtFiles.Identity)).Replace($(LicenseReplaceString),$(License)))"/>
    </ItemGroup>
    <ItemGroup>
      <InstallTSQLtFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputInstallTSQLt)" Lines="@(InstallTSQLtFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputInstallTSQLt)"/>
  </Target>

  <ItemGroup>
    <InstallTestsFiles Include="$(TestsPath)test-dbs\DropTestDatabases.sql;$(TestsPath)test-dbs\CreateTestDatabases.sql;$(TestsPath)test-dbs\CreateTestTables.sql;$(TestsPath)test-dbs\CreateCrazyTables.sql;$(TestsPath)*.sql"/>
  </ItemGroup>

  <Target Name="CreateInstallTests" Inputs="SqlDataComparison.proj;$(SourcePath)$(LicenseFile);@(InstallTestsFiles)" Outputs="$(OutputPath)$(OutputInstallTests)">
    <ItemGroup>
      <InstallTestsFileContents Include="PRINT N'%(InstallTestsFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(InstallTestsFiles.Identity)).Replace($(LicenseReplaceString),$(License)))"/>
    </ItemGroup>
    <ItemGroup>
      <InstallTestsFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputInstallTests)" Lines="@(InstallTestsFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputInstallTests)"/>
  </Target>

  <ItemGroup>
    <UninstallTestDbsFiles Include="$(TestsPath)test-dbs\DropTestDatabases.sql;"/>
  </ItemGroup>

  <Target Name="CreateUninstallTestDbs" Inputs="SqlDataComparison.proj;$(SourcePath)$(LicenseFile);@(UninstallTestDbsFiles)" Outputs="$(OutputPath)$(OutputUninstallTestDbs)">
    <ItemGroup>
      <UninstallTestDbsFileContents Include="PRINT N'%(UninstallTestDbsFiles.Identity)...'%0d%0aGO%0d%0a$([System.IO.File]::ReadAllText(%(UninstallTestDbsFiles.Identity)).Replace($(LicenseReplaceString),$(License)))"/>
    </ItemGroup>
    <ItemGroup>
      <UninstallTestDbsFileContents Include="PRINT N'Done.'%0d%0aGO%0d%0a"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputUninstallTestDbs)" Lines="@(UninstallTestDbsFileContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputUninstallTestDbs)"/>
  </Target>

  <Target Name="CreateCompleteReinstallWithTests" Inputs="$(OutputPath)$(OutputInstall);$(OutputPath)$(OutputInstallMaster);$(OutputPath)$(OutputInstallTSQLt);$(OutputPath)$(OutputInstallTests);" Outputs="$(OutputPath)$(TestsPath)CompleteReinstallWithTests.sql">
    <Exec Command="type $(OutputPath)$(OutputInstall) > $(OutputPath)$(TestsPath)CompleteReinstallWithTests.sql" />
    <Exec Command="type $(OutputPath)$(OutputInstallMaster) >> $(OutputPath)$(TestsPath)CompleteReinstallWithTests.sql" />
    <Exec Command="type $(OutputPath)$(OutputInstallTSQLt) >> $(OutputPath)$(TestsPath)CompleteReinstallWithTests.sql" />
    <Exec Command="type $(OutputPath)$(OutputInstallTests) >> $(OutputPath)$(TestsPath)CompleteReinstallWithTests.sql" />
  </Target>

  <Target Name="AddReadme" Inputs="SqlDataComparison.proj;$(SourcePath)$(LicenseFile);$(SourcePath)static\README.txt" Outputs="$(OutputPath)$(OutputReadme)">
    <ItemGroup>
      <ReadmeContents Include="$([System.IO.File]::ReadAllText($(SourcePath)static\README.txt).Replace($(LicenseReplaceString),$(License)))"/>
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)$(OutputReadme)" Lines="@(ReadmeContents)" Overwrite="true" />

    <Message Text="Created $(OutputPath)$(OutputReadme)"/>
  </Target>

  <!-- Main build target -->
  <Target Name="Build" DependsOnTargets="ReadLicense;CreateInstall;CreateInstallMaster;CreateCleanMaster;CreateInstallTSQLt;CreateInstallTests;CreateUninstallTestDbs;CreateCompleteReinstallWithTests;AddReadme;" />

  <Target Name="Pack" DependsOnTargets="Build" Inputs="$(OutputPath)$(OutputInstall);$(OutputPath)$(OutputInstallMaster);$(OutputPath)$(OutputCleanMaster);$(OutputPath)$(OutputReadme);" Outputs="$(PackageOutputPath)\$(PackageId).$(Version).nupkg">
    <Exec Command="nuget pack -Version $(Version) -OutputDirectory $(PackageOutputPath)" />
    <Exec Command="7z a -tzip pack\SqlDataComparison.$(Version).zip .\build\* -x!tests*" />
  </Target>

  <Target Name="Clean">
    <RemoveDir Directories="$(OutputPath)" Condition="Exists('$(OutputPath)')" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

</Project>